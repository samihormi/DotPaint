/* This file was generated by SableCC (http://www.sablecc.org/). */

package graphlang.analysis;

import graphlang.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseADefProgram(ADefProgram node);
    void caseAStmtStmtlist(AStmtStmtlist node);
    void caseAListStmtlist(AListStmtlist node);
    void caseAMoveStmt(AMoveStmt node);
    void caseADrawStmt(ADrawStmt node);
    void caseAFillStmt(AFillStmt node);
    void caseADefineDefinegrid(ADefineDefinegrid node);
    void caseAMoveMove(AMoveMove node);
    void caseAConnDraw(AConnDraw node);
    void caseACirclDraw(ACirclDraw node);
    void caseAErasecolDraw(AErasecolDraw node);
    void caseASquaDraw(ASquaDraw node);
    void caseATriaDraw(ATriaDraw node);
    void caseARectaDraw(ARectaDraw node);
    void caseARhomDraw(ARhomDraw node);
    void caseAFillrColorize(AFillrColorize node);
    void caseAMakecircleCircle(AMakecircleCircle node);
    void caseAMakesquareSquare(AMakesquareSquare node);
    void caseAMaketriangleTriangle(AMaketriangleTriangle node);
    void caseAMakerectangleRectangle(AMakerectangleRectangle node);
    void caseAMakerhombusRhombus(AMakerhombusRhombus node);
    void caseAMarkConnect(AMarkConnect node);
    void caseAConnectcolConnect(AConnectcolConnect node);
    void caseAChoosecolConnect(AChoosecolConnect node);
    void caseAConnectcolorConnectcolor(AConnectcolorConnectcolor node);
    void caseAChooseChoosecolor(AChooseChoosecolor node);
    void caseAMarkpoint(AMarkpoint node);
    void caseAErasecolorErase(AErasecolorErase node);

    void caseTKeywordgrid(TKeywordgrid node);
    void caseTKeywordmove(TKeywordmove node);
    void caseTKeywordmark(TKeywordmark node);
    void caseTKeywordchoose(TKeywordchoose node);
    void caseTKeywordconnect(TKeywordconnect node);
    void caseTKeywordcircle(TKeywordcircle node);
    void caseTKeywordsquare(TKeywordsquare node);
    void caseTKeywordtriangle(TKeywordtriangle node);
    void caseTKeywordrectangle(TKeywordrectangle node);
    void caseTKeywordrhombus(TKeywordrhombus node);
    void caseTKeywordfill(TKeywordfill node);
    void caseTKeyworderase(TKeyworderase node);
    void caseTDirection(TDirection node);
    void caseTColor(TColor node);
    void caseTShape(TShape node);
    void caseTTritype(TTritype node);
    void caseTNumber(TNumber node);
    void caseTIdentifier(TIdentifier node);
    void caseTOpsemicolon(TOpsemicolon node);
    void caseTOpequal(TOpequal node);
    void caseTBlank(TBlank node);
    void caseTMinus(TMinus node);
    void caseEOF(EOF node);
}
